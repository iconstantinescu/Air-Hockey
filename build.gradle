import com.github.spotbugs.SpotBugsTask

buildscript {
    repositories {
        mavenCentral()
    }
    configurations.maybeCreate("pitest")
    dependencies {
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.4.5'
        pitest 'org.pitest:pitest-junit5-plugin:0.10'
    }
}

plugins {
    id 'java'
//    id 'eclipse' // optional (to generate Eclipse project files)
//    id 'idea' // optional (to generate IntelliJ IDEA project files)

    // Test coverage
    id 'jacoco'

    // Code style
    id 'checkstyle'

    // PMD
    id 'pmd'

    // FindBugs / SpotBugs
    id "com.github.spotbugs" version "2.0.1"
    
}

group 'nl.tudelft.cse.sem.template'
version '1.0-SNAPSHOT'

apply plugin:'java'
apply plugin: "info.solidsoft.pitest"

project.ext.lwjglVersion = "3.2.3"
project.ext.lwjglNatives = "natives-linux"

project.ext.gdxVersion = '1.9.8'

sourceCompatibility = 11

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()

    jacoco {
        enabled = true
        includes = []
        excludes = []
    }
}



dependencies {

    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
    compile group: 'org.mindrot', name: 'jbcrypt', version: '0.4'

	compile "com.badlogicgames.gdx:gdx:$gdxVersion"
	compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"

	compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
	compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
	compile "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
//            includes = ['nl.tudelft.cse.sem.*']
            excludes = ['Render.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

jacocoTestReport {
    // The following classes that have been ignored are either interfacing with the GUI
    // or OpenGL/LibGDX functions that do not count towards a meaningful test coverage
    // report for the overall design of the application.
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['game/**', 'menu/**', 'utilities/ObjectDrawer.class', 'objects/Match.class', 'utilities/InformationDrawer.class',
            ])
        })
    }
}

checkstyle {
    toolVersion "8.25"
	configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

pmd {
    incrementalAnalysis = true
}

spotbugs {
    sourceSets = [sourceSets.main]
    ignoreFailures = false
    effort = "default"
    reportLevel = "high"
    visitors = ["FindSqlInjection", "SwitchFallthrough"]
    excludeFilter = file("$rootProject.projectDir/config/spotbugs/excludeFilter.xml")
}

pitest {
    pitestVersion = "1.4.9"
    testPlugin = "junit5"
    targetClasses = ['client.*', 'utilities.*', 'objects.*']  // by default "${project.group}.*"
}

tasks.withType(SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

